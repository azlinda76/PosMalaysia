{"info":{"_postman_id":"0a10c585-abeb-48f1-89cc-78849d4c69cf","name":"Intro to Writing Tests","description":"# About this collection\n\nPostman's powerful scripting feature helps you to write a range of API tests in JavaScript, including integration, regression, and contract tests.\n\n## Using the collection\n\n**Step 1:** Send the sample requests and view the response and test results.\n\n**Step 2:** Replace the sample request URLs with your desired API endpoints.\n\n**Step 3:** Customize the tests in the \"Tests\" tab if needed. Don't forget to save your changes.\n\n## Quick tips for writing tests\n\n- Organize your test scenarios by grouping your requests in [collections](https://www.getpostman.com/docs/v6/postman/collections/intro_to_collections) and [folders](https://www.getpostman.com/docs/v6/postman/collections/managing_collections#adding-folders), and naming them descriptively\n    \n- Document your APIâ€™s requirements using [markdown in the descriptions](https://www.getpostman.com/docs/v6/postman/collections/using_markdown_for_descriptions)\n    \n- Use [variables](https://www.getpostman.com/docs/v6/postman/environments_and_globals/variables) to simulate more sophisticated user flows\n    \n- Common tests that will be run after every request can be added to collection-level tests or folder-level tests\n    \n\n## Resources\n\n[Test scripts](https://www.getpostman.com/docs/v6/postman/scripts/test_scripts)\n\n[Test examples](https://www.getpostman.com/docs/v6/postman/scripts/test_examples)\n\n[Quick reference guide](https://community.getpostman.com/t/the-postman-cheatsheet-quick-reference-guide/1054)\n\n[Examples and guides](https://github.com/DannyDainton/All-Things-Postman)\n\n[Writing tests in Postman](http://blog.getpostman.com/2017/10/25/writing-tests-in-postman/)\n\n[API testing tips from a Postman professional](http://blog.getpostman.com/2017/07/28/api-testing-tips-from-a-postman-professional/)","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json"},"item":[{"name":"Functional Testing","item":[{"name":"List Countries","event":[{"listen":"test","script":{"id":"68403b80-0213-45b3-9fd0-060e9a90e9c8","exec":["// ---------- Basic response checks ----------\r","pm.test(\"Status code is 200\", function () {\r","    pm.response.to.have.status(200);\r","});\r","\r",""],"type":"text/javascript","packages":{}}}],"id":"bb424ebb-e34b-48ee-8a52-834ac95069df","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"GET","header":[],"url":{"raw":"{{URL}}/api/countries","host":["{{URL}}"],"path":["api","countries"]}},"response":[]},{"name":"Get State by From Postcode","event":[{"listen":"test","script":{"id":"8dd3dcfd-fa64-4a92-bb65-b0a475dc46ee","exec":["const jsonData = pm.response.json();\r","const expectedObject = [{\r","    \"stateNm\":\"Perak\",\r","    \"stateCd\":\"PER\",\r","    \"city\":\"SUNGKAI\",\r","    \"postCode\":\"35600\"\r","}];\r","\r","// ---------- Basic response checks ----------\r","pm.test(\"Status code is 200\", function () {\r","    pm.response.to.have.status(200);\r","});\r","\r","pm.test(\"Response is an array\", function () {\r","    pm.expect(jsonData).to.be.an(\"array\");\r","    pm.expect(jsonData.length).to.be.above(0);\r","});\r","\r","// ---------- Exact match ----------\r","pm.test(\"Response matches expected object exactly\", function () {\r","    pm.expect(jsonData).to.deep.equal(expectedObject);\r","});\r","\r","// ---------- Field-level checks ----------\r","pm.test(\"Check state name is Perak\", function () {\r","    pm.expect(jsonData[0].stateNm).to.eql(\"Perak\");\r","});\r","\r","pm.test(\"Check state code is PER\", function () {\r","    pm.expect(jsonData[0].stateCd).to.eql(\"PER\");\r","});\r","\r","pm.test(\"Check city is SUNGKAI\", function () {\r","    pm.expect(jsonData[0].city).to.eql(\"SUNGKAI\");\r","});\r","\r","pm.test(\"Check postcode is 35600\", function () {\r","    pm.expect(jsonData[0].postCode).to.eql(\"35600\");\r","});\r","\r","// ---------- Data quality checks ----------\r","pm.test(\"All fields are present\", function () {\r","    const keys = Object.keys(jsonData[0]);\r","    pm.expect(keys).to.have.members([\"stateNm\", \"stateCd\", \"city\", \"postCode\"]);\r","});\r","\r","pm.test(\"Values are non-empty strings\", function () {\r","    Object.values(jsonData[0]).forEach((val) => {\r","        pm.expect(val).to.be.a(\"string\").and.not.empty;\r","    });\r","});\r","\r","// ---------- Negative / defensive checks ----------\r","pm.test(\"Response contains only one object\", function () {\r","    pm.expect(jsonData.length).to.eql(1);\r","});\r","\r","pm.test(\"No unexpected keys in response object\", function () {\r","    pm.expect(Object.keys(jsonData[0])).to.have.lengthOf(4);\r","});\r","\r",""],"type":"text/javascript","packages":{}}}],"id":"fa57dac4-be74-49ad-bd30-dffb1a87b097","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"POST","header":[],"body":{"mode":"raw","raw":"{\"postCode\":\"35600\"}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{URL}}/api/getStateByPostcode","host":["{{URL}}"],"path":["api","getStateByPostcode"]}},"response":[]},{"name":"Get State by To Postcode","event":[{"listen":"test","script":{"id":"8dd3dcfd-fa64-4a92-bb65-b0a475dc46ee","exec":["const jsonData = pm.response.json();\r","const expectedObject = [{\r","    \"stateNm\":\"Negeri Sembilan\",\r","    \"stateCd\":\"SER\",\r","    \"city\":\"SEREMBAN\",\r","    \"postCode\":\"70594\"\r","    }];\r","\r","// ---------- Basic response checks ----------\r","pm.test(\"Status code is 200\", function () {\r","    pm.response.to.have.status(200);\r","});\r","\r","pm.test(\"Response is an array\", function () {\r","    pm.expect(jsonData).to.be.an(\"array\");\r","    pm.expect(jsonData.length).to.be.above(0);\r","});\r","\r","// ---------- Exact match ----------\r","pm.test(\"Response matches expected object exactly\", function () {\r","    pm.expect(jsonData).to.deep.equal(expectedObject);\r","});\r","\r","// ---------- Field-level checks ----------\r","pm.test(\"Check state name is Perak\", function () {\r","    pm.expect(jsonData[0].stateNm).to.eql(\"Negeri Sembilan\");\r","});\r","\r","pm.test(\"Check state code is PER\", function () {\r","    pm.expect(jsonData[0].stateCd).to.eql(\"SER\");\r","});\r","\r","pm.test(\"Check city is SUNGKAI\", function () {\r","    pm.expect(jsonData[0].city).to.eql(\"SEREMBAN\");\r","});\r","\r","pm.test(\"Check postcode is 35600\", function () {\r","    pm.expect(jsonData[0].postCode).to.eql(\"70594\");\r","});\r","\r","// ---------- Data quality checks ----------\r","pm.test(\"All fields are present\", function () {\r","    const keys = Object.keys(jsonData[0]);\r","    pm.expect(keys).to.have.members([\"stateNm\", \"stateCd\", \"city\", \"postCode\"]);\r","});\r","\r","pm.test(\"Values are non-empty strings\", function () {\r","    Object.values(jsonData[0]).forEach((val) => {\r","        pm.expect(val).to.be.a(\"string\").and.not.empty;\r","    });\r","});\r","\r","// ---------- Negative / defensive checks ----------\r","pm.test(\"Response contains only one object\", function () {\r","    pm.expect(jsonData.length).to.eql(1);\r","});\r","\r","pm.test(\"No unexpected keys in response object\", function () {\r","    pm.expect(Object.keys(jsonData[0])).to.have.lengthOf(4);\r","});\r","\r","pm.test(\"Status code is 200\", function () {\r","    pm.response.to.have.status(200);\r","});\r",""],"type":"text/javascript","packages":{}}}],"id":"a3029b21-1168-4cc1-ab5b-3515dfb5a1ac","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"POST","header":[],"body":{"mode":"raw","raw":"{\"postCode\":\"70594\"}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{URL}}/api/getStateByPostcode","host":["{{URL}}"],"path":["api","getStateByPostcode"]}},"response":[]},{"name":"Calculate Price","event":[{"listen":"test","script":{"id":"570a86ef-f8d1-4a7e-ae96-ab6f51a7199e","exec":["const jsonData = pm.response.json();\r","const expectedObject = [{\r","    \"first\":\"7.2\",\"next\":\"0.8\",\"amount\":\"7.2\",\"maxWeight\":\"2\",\"totalAmount\":\"10.03\",\"zone\":\"2\",\"fuelCharge\":\"1.08\",\"handlingCharge\":\"1.08\",\"SST\":\"0.57\",\"PosCoverage\":\"0.1\",\"stateFrom\":\"Perak\",\"stateTo\":\"Negeri Sembilan\",\"Town\":\"Seremban\",\"ODA\":\"0\",\"ODAPrice\":\"0\",\"SLA\":\"Next working day\",\"isDomestic\":true,\"name\":\"POS LAJU\",\"estimateDelivery\":\"1 - 5 working days\"\r","    }];\r","// ---------- Basic response checks ----------\r","pm.test(\"Status is 200\", () => pm.response.to.have.status(200));\r","\r","// ---------- Exact match ----------\r","pm.test(\"Response matches expected object exactly\", function () {\r","    pm.expect(jsonData).to.deep.equal(expectedObject);\r","});\r","\r","pm.test(\"Content-Type is JSON\", () => {\r","  const ct = (pm.response.headers.get(\"Content-Type\") || \"\").toLowerCase();\r","  pm.expect(ct).to.include(\"application/json\");\r","});\r","\r",""],"type":"text/javascript","packages":{}}}],"id":"06068ba7-8868-49bc-b52d-bf6e249c86ae","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"noauth"},"method":"POST","header":[],"body":{"mode":"raw","raw":"{\"country\":\"Malaysia\",\"weight\":1,\"postcodeFrom\":35600,\"postcodeTo\":70594}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{URL}}/api/price","host":["{{URL}}"],"path":["api","price"]}},"response":[]}],"id":"ae98851a-05f7-41fc-985c-39d5e1d9e936"}],"event":[{"listen":"prerequest","script":{"type":"text/javascript","exec":[""]}},{"listen":"test","script":{"type":"text/javascript","exec":[""]}}]}